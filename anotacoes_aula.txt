Anotações
------------------------------------------------------
Configuração do back end do projeto: task

dependencias do backend: offline

"dependencies": {
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "1.19.0",
    "consign": "0.1.6",
    "cors": "2.8.5",
    "express": "4.17.1",
    "jwt-simple": "0.5.6",
    "knex": "0.20.7",
    "moment": "2.24.0",
    "passport": "0.4.1",
    "passport-jwt": "4.0.0",
    "pg": "7.17.0"
},
"devDependencies": {
    "nodemon": "2.0.2"
}

Instalando o knex glogal
--> npm i knex -g

--------------------------------
Criando o arquivo packge json

-- npm init -y

Depois basta copiar o codigo das dependencias e colocar no packge json criado anteriormente, ou instala-lo de forma manual e individual.

Caso tenha copiado e colado as dependencias, Use:
-- npm install

---------------------------------
Depois de configurado inicialmente o seu back com node use para executar:
-- npm start

----------------------------------
Configuração DB PostgreSQL

psql --version

Iniciar o banco de dados com o comando use:
--> psql -U postgres

Ele vai pedir pra digitar a senha que vc definiu na instalação:
no meu caso ela é 1234

Para sair do psql use:
--> \q

Pra listar os databeses existentes use:
--> \l

Criando o bando de dados:
--> create databse nome_do_banco;

Para conectar ao banco use;
--> \c nome_do_banco

Para listas as tabelas criadas use?
==> \dt

----------------------------------------
Knex Configuração

Para criar o arquivo knexfke.js use:
--> knex init

Dentro do arquivo, irá conter todos as Configurações que vamos usar pra conectar com o banco de dados.

Criar as migrates:
--> knex migrate:make create_table_users
--> knex migrate:make create_table_tasks

Com as migrates criadas e configuradas no projeto, você pode usar o comando:
--> knex migrate:latest

para excluir migrates tabelas use:
--> knex migrate:rollback

